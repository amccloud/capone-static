pid /run/nginx.pid;
user www-data;
worker_processes auto;

# Expose the DATABASE_URL environment variable
# to the router. This makes it available in lua.
env DATABASE_URL;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  server_tokens off;
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  resolver 10.0.0.2;

  upstream capone-api {
    server capone-api-1:3000;
    server capone-api-2:3000;
  }

  server {
    listen 80 default_server;

    location /__health__ {
      access_log off;
      add_header Content-Type text/plain;
      return 200 'OK';
    }

    location @handle_redirect {
      proxy_pass '$upstream_http_location';
    }

    location / {
      set $file_content_sha1 '';
      set $file_storage_url '';
      set $site_surrogate_key '';

      access_by_lua_file /usr/local/capone/scripts/router.lua;

      # Handle redirects internally.
      error_page 301 302 307 = @handle_redirect;
      proxy_intercept_errors on;
      proxy_pass $file_storage_url;

      more_set_headers "ETag: $file_content_sha1";

      # Set stale-* cache control directives enable asynchronous
      # origin refreshes. 86400 seconds (24 hours) is an arbitrary
      # value that can be tunned if necessary.
      more_set_headers 'Cache-Control: stale-while-revalidate=86400, stale-if-error=86400';

      # Increase the TTL to 1 year
      more_set_headers 'Surrogate-Control: max-age=31536000'

      # https://www.fastly.com/blog/surrogate-keys-part-1
      more_set_headers "Surrogate-Key: $site_surrogate_key";

      # Hide remaining headers.
      more_clear_headers 'x-bz-*';
    }
  }

  server {
    listen 80;
    server_name api.*;

    location /__health__ {
      access_log off;
      add_header Content-Type text/plain;
      return 200 'OK';
    }

    location / {
      proxy_pass http://capone-api;
    }
  }
}
